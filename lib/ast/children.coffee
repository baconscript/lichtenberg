# A list of all the types we may see in a syntax tree, and
# the child nodes they contain.

module.exports =
  AssignmentExpression: ['left', 'right']
  ArrayExpression: ['elements']
  ArrowFunctionExpression: ['params','defaults','body','rest']
  BlockStatement: ['body']
  BinaryExpression: ['left', 'right']
  BreakStatement: []
  CallExpression: ['callee', 'arguments']
  CatchClause: ['param','body']
  ConditionalExpression: ['test', 'consequent', 'alternate']
  ContinueStatement: []
  DoWhileStatement: ['body','test']
  DebuggerStatement: []
  EmptyStatement: []
  ExpressionStatement: ['expression']
  ForStatement: ['init','test','update','body']
  ForInStatement: ['left','right','body']
  FunctionDeclaration: ['id','params','defaults','body','rest']
  FunctionExpression: ['id','params','defaults','body','rest']
  Identifier: []
  IfStatement: ['test','consequent','alternate']
  Literal: []
  LabeledStatement: ['label','body']
  LogicalExpression: ['left', 'right']
  MemberExpression: ['object','property']
  NewExpression: ['callee']
  ObjectExpression: ['properties']
  Program: ['body']
  Property: ['key','value']
  ReturnStatement: []
  SequenceExpression: ['expressions']
  SwitchStatement: ['discriminant','cases']
  SwitchCase: ['test','consequent']
  ThisExpression: []
  ThrowStatement: ['argument']
  TryStatement: ['block','guardedHandlers','handlers']
  UnaryExpression: ['argument']
  UpdateExpression: ['argument']
  VariableDeclaration: ['declarations']
  VariableDeclarator: ['init']
  WhileStatement: ['test','body']
  WithStatement: ['object','body']
